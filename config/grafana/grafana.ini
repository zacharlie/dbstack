[server]
enable_gzip = true
domain = $__env{SERVER_URL}
# domain = https://srv.mshome.net
# root_url = https://srv.mshome.net/grafana
root_url = http://grafana/grafana
# root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
# enforce_domain = true
# enforce_domain = false
serve_from_sub_path = true
protocol = http
http_port = 3000
#router_logging = false
#static_root_path = public
#cert_file = /etc/certs/cert.pem
#cert_key = /etc/certs/cert-key.pem
# cert_file = /etc/certs/nginx-selfsigned.crt
# cert_key = /etc/certs/nginx-selfsigned.key

[paths]
provisioning = /etc/grafana/provisioning

[security]
# If you want to embed grafana into an iframe for example
allow_embedding = true
# cookie_samesite = none
cookie_samesite = disable

[users]
default_theme = dark

# https://grafana.com/docs/grafana/latest/auth/auth-proxy/
[auth.proxy]
# Defaults to false, but set to true to enable this feature
enabled = true
# HTTP Header name that will contain the username or email
header_name = X-WEBAUTH-USER
# HTTP Header property, defaults to `username` but can also be `email`
header_property = username
# Set to `true` to enable auto sign up of users who do not exist in Grafana DB. Defaults to `true`.
auto_sign_up = true
# Define cache time to live in minutes
# If combined with Grafana LDAP integration it is also the sync interval
sync_ttl = 60
# Limit where auth proxy requests come from by configuring a list of IP addresses.
# This can be used to prevent users spoofing the X-WEBAUTH-USER header.
# Example `whitelist = 192.168.1.1, 192.168.1.0/24, 2001::23, 2001::0/120`
whitelist =
# Optionally define more headers to sync other user attributes
# Example `headers = Name:X-WEBAUTH-NAME Role:X-WEBAUTH-ROLE Email:X-WEBAUTH-EMAIL Groups:X-WEBAUTH-GROUPS`
headers =
# Check out docs on this for more details on the below setting
enable_login_token = false
