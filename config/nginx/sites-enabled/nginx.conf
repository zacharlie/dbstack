map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream authelia {
    server authelia:9091;
}

upstream static {
    server static:80;
}

upstream pgadmin {
    server pgadmin:80;
}

upstream postgrest {
    server postgrest:3000;
}

upstream postgraphile {
    server postgraphile:5000;
}

upstream swagger {
    server swagger:8080;
}

upstream grafana {
    server grafana:3000;
}

upstream prometheus {
    server prometheus:9090;
}

upstream promtail {
    server promtail:9080;
}

upstream features {
   server features:9000;
}

upstream tiles {
   server tiles:7800;
}

upstream advisor {
    server advisor:8080;
}

upstream monitor {
    server monitor:3001;
}

server {
    # redirect to https
    listen 80;
    listen [::]:80;
    # server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include ssl/certificates.conf;
    include ssl/ssl-params.conf;

    error_log /dev/stdout info;
    access_log /dev/stdout;

    # server_name _;
    root /usr/share/nginx/html/www/web;
    index index.html;

    # default max upload size
    client_max_body_size        5000;

    keepalive_timeout  500;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    send_timeout                600;
    client_header_timeout       600;
    client_body_timeout         600;
    fastcgi_read_timeout        300;

    location / {
        proxy_pass http://authelia;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
    }

    location /authelia {
        internal;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        # proxy_pass http://authelia/api/verify?auth=basic;
        proxy_pass http://authelia/api/verify;
        proxy_set_header X-Script-Name /authelia;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
    }

    # location /auth-redirect {
        # internal;
    #     return 302 https://$host/$is_args$args;
    # }

    location /dashboard {
        proxy_pass http://static/dashboard;
        proxy_set_header X-Script-Name /dashboard;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /content {
        proxy_pass http://static/content;
        proxy_set_header X-Script-Name /content;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /docs {
        proxy_pass http://static/docs;
        proxy_set_header X-Script-Name /docs;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /swagger {
        proxy_pass http://swagger;
        proxy_set_header X-Script-Name /swagger;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    # Needs trailing slash or returns 404
    # Use trailing slash to redirect /rest to /rest/
    location /rest/ {
        rewrite /rest(.*) $1 break;
        proxy_pass http://postgrest/;

        # https://postgrest.org/en/stable/admin.html#hardening-postgrest
        default_type  application/json;
        proxy_hide_header Content-Location;
        add_header Content-Location  /api/$upstream_http_content_location;

        proxy_set_header X-Script-Name /postgrest;

        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /graphql {
        proxy_pass http://postgraphile/graphql;
        proxy_set_header X-Script-Name /graphql;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /graphiql {
        proxy_pass http://postgraphile/graphiql;
        # proxy_intercept_errors on;
        # proxy_next_upstream error http_502;
        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        port_in_redirect off;
        proxy_connect_timeout 600;
        proxy_set_header X-Script-Name /graphiql;

        add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
        add_header 'Access-Control-Allow-Origin' '*';
        include /etc/nginx/conf.d/includes/cors-settings.conf;

        include /etc/nginx/conf.d/includes/auth.conf;

    }

    location /admin {
        proxy_pass http://pgadmin/;
        proxy_set_header X-Script-Name /admin;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /browser {
        proxy_pass http://filebrowser:80;
        proxy_set_header X-Script-Name /filebrowser;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;

        # Set large max file size for GIS uploads
        client_max_body_size 2G;
    }

    location /advisor {
        proxy_pass http://advisor$request_uri;
        proxy_set_header X-Script-Name /advisor;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /prometheus {
        proxy_pass http://prometheus/prometheus;
        proxy_set_header X-Script-Name /prometheus;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /promtail {
        proxy_pass http://promtail/;
        proxy_set_header X-Script-Name /promtail;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /features/ {
        rewrite /features(.*) $1 break;
        proxy_pass http://features;
        proxy_set_header X-Script-Name /features;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
   }

    location /tiles/ {
        rewrite /tiles(.*) $1 break;
        proxy_pass http://tiles;
        proxy_set_header X-Script-Name /tiles;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /grafana {
        proxy_pass http://grafana/grafana;
        proxy_set_header X-Script-Name /grafana;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    location /uptime {
        proxy_pass http://monitor/uptime;
        proxy_set_header X-Script-Name /uptime;
        include /etc/nginx/conf.d/includes/proxy.conf;
        include /etc/nginx/conf.d/includes/cors-settings.conf;
        include /etc/nginx/conf.d/includes/auth.conf;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
